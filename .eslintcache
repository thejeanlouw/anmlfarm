[{"C:\\Work\\PM\\ANNML-Farm\\anmlfarm\\src\\pages\\homepage\\homepage.component.jsx":"1","C:\\Work\\PM\\ANNML-Farm\\anmlfarm\\src\\components\\menu-drawer\\menu-drawer.component.jsx":"2","C:\\Work\\PM\\ANNML-Farm\\anmlfarm\\src\\components\\swipe-up-button\\swipe-up-button.component.jsx":"3","C:\\Work\\PM\\ANNML-Farm\\anmlfarm\\src\\App.js":"4","C:\\Work\\PM\\ANNML-Farm\\anmlfarm\\src\\pages\\entry-page\\entry-page.component.jsx":"5"},{"size":826,"mtime":1611053428370,"results":"6","hashOfConfig":"7"},{"size":3037,"mtime":1611054655761,"results":"8","hashOfConfig":"7"},{"size":381,"mtime":1611054036673,"results":"9","hashOfConfig":"7"},{"size":572,"mtime":1610997049618,"results":"10","hashOfConfig":"7"},{"size":1525,"mtime":1610953345661,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"y8wwi8",{"filePath":"15","messages":"16","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"17","usedDeprecatedRules":"14"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"20"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Work\\PM\\ANNML-Farm\\anmlfarm\\src\\pages\\homepage\\homepage.component.jsx",[],["25","26"],"C:\\Work\\PM\\ANNML-Farm\\anmlfarm\\src\\components\\menu-drawer\\menu-drawer.component.jsx",["27","28"],"import React from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport './menu-drawer.styles.scss'\r\n\r\n\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\n\r\nimport home from './images/home.png'\r\nimport library from './images/library.png'\r\nimport capture from './images/capture.png'\r\nimport SwipeUpButton from '../swipe-up-button/swipe-up-button.component';\r\n\r\nclass MenuDrawer extends React.Component {\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            drawerOpen: false,\r\n            listItems: [\r\n                {\r\n                    id: 1,\r\n                    text: 'Home', \r\n                    imageUrl: '',\r\n                    linkTo: '/home', \r\n                    iconImageUrl: home\r\n                },\r\n                {\r\n                    id: 2,\r\n                    text: 'Library', \r\n                    imageUrl: '',\r\n                    linkTo: '/library', \r\n                    iconImageUrl: library\r\n                },\r\n            ]\r\n        }\r\n    }\r\n\r\n    toggleDrawer = (state) => (event) => {\r\n        if (event.type === 'keydown' && (event.key === 'Tab' || event.key === 'Shift')) {\r\n          return;\r\n        }\r\n        this.setState({drawerOpen: state});\r\n    };\r\n\r\n\r\n    render(){\r\n        return(\r\n            <div className='menu-drawer'>\r\n                <div className='drawer-button'>\r\n                    <SwipeUpButton callback={this.toggleDrawer(true)}/>\r\n                </div>\r\n                <Drawer anchor='bottom' open={this.state.drawerOpen} onClose={this.toggleDrawer(false)}>\r\n                    <div\r\n                        className='drawer-list'\r\n                        role=\"presentation\"\r\n                        onClick={this.toggleDrawer(false)}\r\n                        onKeyDown={this.toggleDrawer(false)}\r\n                        style={{\r\n                            width: 'auto'\r\n                        }}\r\n                    >\r\n                        <List>\r\n                            {this.state.listItems ? this.state.listItems.map(({id, text, linkTo, iconImageUrl}) => (\r\n                            <Link to={linkTo} className='list-item'>\r\n                                <ListItem button key={id} >\r\n                                    <ListItemIcon className='list-item-icon'>\r\n                                        <img src={iconImageUrl} />\r\n                                    </ListItemIcon>\r\n                                    <ListItemText primary={text} className='list-item-text'/>\r\n                                </ListItem> \r\n                            </Link>\r\n\r\n                            )): null}\r\n                            \r\n                        </List>\r\n                    </div>\r\n                </Drawer>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default MenuDrawer;","C:\\Work\\PM\\ANNML-Farm\\anmlfarm\\src\\components\\swipe-up-button\\swipe-up-button.component.jsx",["29","30"],"import React from 'react';\r\nimport './swipe-up-button.styles.scss'\r\n\r\nimport {Link} from 'react-router-dom'\r\n\r\n\r\nimport buttonGraphic from './images/SwipeUp.png';\r\n\r\nconst SwipeUpButton = ({callback}) =>{\r\n\r\n    return(\r\n        <div className='swipe-up-button'>\r\n          <img src={buttonGraphic} onClick={callback} />\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default SwipeUpButton;","C:\\Work\\PM\\ANNML-Farm\\anmlfarm\\src\\App.js",[],"C:\\Work\\PM\\ANNML-Farm\\anmlfarm\\src\\pages\\entry-page\\entry-page.component.jsx",[],{"ruleId":"31","replacedBy":"32"},{"ruleId":"33","replacedBy":"34"},{"ruleId":"35","severity":1,"message":"36","line":14,"column":8,"nodeType":"37","messageId":"38","endLine":14,"endColumn":15},{"ruleId":"39","severity":1,"message":"40","line":71,"column":41,"nodeType":"41","endLine":71,"endColumn":67},{"ruleId":"35","severity":1,"message":"42","line":4,"column":9,"nodeType":"37","messageId":"38","endLine":4,"endColumn":13},{"ruleId":"39","severity":1,"message":"40","line":13,"column":11,"nodeType":"41","endLine":13,"endColumn":57},"no-native-reassign",["43"],"no-negated-in-lhs",["44"],"no-unused-vars","'capture' is defined but never used.","Identifier","unusedVar","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'Link' is defined but never used.","no-global-assign","no-unsafe-negation"]